"""Init

Revision ID: 3318b847592e
Revises: 
Create Date: 2025-02-02 18:03:56.374469

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '3318b847592e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('card_group',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('title', sa.VARCHAR(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('training',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('card_group_id', sa.BIGINT(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['card_group_id'], ['card_group.id'], ondelete='CASCADE')
                    )
    op.create_table('card_item',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('group_id', sa.BIGINT(), nullable=False),
                    sa.Column('term', sa.VARCHAR(), nullable=False),
                    sa.Column('definition', sa.TEXT(), nullable=False),
                    sa.ForeignKeyConstraint(['group_id'], ['card_group.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('training_level',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('training_id', sa.BIGINT(), nullable=False),
                    sa.Column('card_item_id', sa.BIGINT(), nullable=False),
                    sa.Column('answer_is_right', sa.BOOLEAN(), nullable=True),
                    sa.Column('answered_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['card_item_id'], ['card_item.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['training_id'], ['training.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_state',
                    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
                    sa.Column('bot_id', sa.BIGINT(), nullable=False),
                    sa.Column('chat_id', sa.BIGINT(), nullable=False),
                    sa.Column('user_id', sa.BIGINT(), nullable=False),
                    sa.Column('thread_id', sa.BIGINT(), nullable=True),
                    sa.Column('business_connection_id', sa.VARCHAR(), nullable=True),
                    sa.Column('destiny', sa.VARCHAR(), nullable=False),
                    sa.Column('data', sa.JSON(), nullable=False),
                    sa.Column('state', sa.VARCHAR(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('training', sa.Column('current_level_id', sa.BIGINT(), nullable=True))
    op.create_foreign_key('fk_training_current_level_id', 'training', 'training_level',
                          ['current_level_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_training_current_level_id', 'training', type_='foreignkey')
    op.drop_column('training', 'current_level_id')
    op.drop_table('user_state')
    op.drop_table('training_level')
    op.drop_table('card_item')
    op.drop_table('training')
    op.drop_table('card_group')
    # ### end Alembic commands ###
